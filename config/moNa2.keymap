#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <500>;
};

/ {
    combos {
        compatible = "zmk,combos";

        middleclick {
            bindings = <&mkp MB3>;
            key-positions = <32 31>;
        };

        comma_period {
            bindings = <&mt PERIOD COMMA>;
            key-positions = <18 19>;
        };

        exclamation_question {
            bindings = <&mt QUESTION EXCLAMATION>;
            key-positions = <13 12>;
        };

        single_doublequote {
            bindings = <&mt DOUBLE_QUOTES SINGLE_QUOTE>;
            key-positions = <19 20>;
        };

        semicolon_colon {
            bindings = <&mt COLON SEMICOLON>;
            key-positions = <12 11>;
        };

        hash_dollar {
            bindings = <&mt DOLLAR HASH>;
            key-positions = <11 23>;
        };

        percent_ampersand {
            bindings = <&mt AMPERSAND PERCENT>;
            key-positions = <12 24>;
        };

        underscore_equal {
            bindings = <&mt EQUAL UNDERSCORE>;
            key-positions = <13 25>;
        };

        caret_tilde {
            bindings = <&mt TILDE CARET>;
            key-positions = <14 26>;
        };

        backslash_pipe {
            bindings = <&mt PIPE BACKSLASH>;
            key-positions = <17 29>;
        };

        at_grave {
            bindings = <&mt GRAVE AT_SIGN>;
            key-positions = <18 30>;
        };

        ssterisk_slash {
            bindings = <&mt SLASH ASTERISK>;
            key-positions = <19 31>;
        };

        plus_minus {
            bindings = <&mt MINUS PLUS>;
            key-positions = <20 32>;
        };

        parenthesis {
            bindings = <&parenthesis>;
            key-positions = <4 3>;
        };

        bracket {
            bindings = <&bracket>;
            key-positions = <2 3>;
        };

        than {
            bindings = <&than>;
            key-positions = <2 1>;
        };

        brace {
            bindings = <&brace>;
            key-positions = <1 0>;
        };

        copy_cut {
            bindings = <&mt LC(X) LC(C)>;
            key-positions = <5 6>;
        };

        undo_redo {
            bindings = <&mt LC(Y) LC(Z)>;
            key-positions = <7 6>;
        };

        tab_close_open {
            bindings = <&mt LC(LS(T)) LC(F4)>;
            key-positions = <9 8>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        parenthesis: parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "PARENTHESIS";
        };

        bracket: bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT_ARROW>;
            label = "BRACKET";
        };

        than: than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT_ARROW>;
            label = "THAN";
        };

        brace: brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT_ARROW>;
            label = "BRACE";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_up_down_invert: scroll_up_down_invert {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
            label = "SCROLL_UP_DOWN_INVERT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
&kp Q          &kp W           &kp E               &kp R             &kp T                                                    &kp Y        &kp U              &kp I                &kp O            &kp P
&kp A          &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G        &trans                 &lt 4 LC(SPACE)      &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &lt 5 MINUS
&kp Z          &kp X           &kp C               &kp V             &kp B        &mt LS(F16) LS(F15)    &mt LS(F13) LS(F14)  &kp N        &kp M              &mkp MB1             &mkp MB2         &mkp MB4
&kp LC(SPACE)  &kp LEFT_WIN    &kp ESCAPE          &lt 1 TAB         &lt 2 SPACE  &lt 3 DELETE           &kp BACKSPACE        &lt 5 ENTER                                                           &mkp MB5
            >;

            sensor-bindings = <&scroll_up_down_invert>;
        };

        Numpad {
            bindings = <
&none         &none         &none             &none           &none                       &kp KP_NUMLOCK   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_SLASH
&kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none  &none    &kp ESCAPE  &kp COMMA        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK
&none         &none         &none             &none           &none  &none    &kp EQUAL   &kp KP_DOT       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_MINUS
&none         &none         &none             &none           &none  &none    &none       &kp KP_NUMBER_0                                                     &kp KP_PLUS
            >;

            sensor-bindings = <&scroll_up_down_invert>;
        };

        Arrow {
            bindings = <
&none         &none         &none             &none           &none                       &none  &kp HOME        &kp PRINTSCREEN  &kp PAGE_UP      &none
&kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none  &none    &kp ESCAPE  &none  &kp END         &kp UP_ARROW     &kp PAGE_DOWN    &none
&none         &none         &none             &none           &none  &none    &none       &none  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp RIGHT_ARROW  &kp K_APPLICATION
&none         &none         &none             &none           &none  &none    &none       &none                                                    &none
            >;

            sensor-bindings = <&scroll_up_down_invert>;
        };

        Function {
            bindings = <
&none     &none     &none      &none      &none                    &none  &mt F13 F1  &mt F14 F2   &mt F15 F3   &mt F16 F4
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none  &none    &kp ESC  &none  &mt F17 F5  &mt F18 F6   &mt F19 F7   &mt F20 F8
&none     &none     &none      &none      &none  &none    &none    &none  &mt F21 F9  &mt F22 F10  &mt F23 F11  &mt F24 F12
&none     &none     &none      &none      &none  &none    &none    &none                                        &none
            >;

            sensor-bindings = <&scroll_up_down_invert>;
        };

        Bluetooth {
            bindings = <
&none  &none  &none  &none  &none                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &none         &none
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &none         &bt BT_CLR
&none  &none  &none  &none  &none  &none    &none  &none                                                   &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down_invert>;
        };

        Shortcut_Scroll {
            bindings = <
&kp TAB           &kp F2          &kp F4  &kp F5        &kp F6                       &kp Y  &kp HOME        &kp PRINTSCREEN  &kp PAGE_UP      &none
&none             &kp A           &kp S   &kp F         &none   &none    &kp ESCAPE  &none  &kp END         &kp UP_ARROW     &kp PAGE_DOWN    &none
&none             &kp LEFT_SHIFT  &kp Z   &kp X         &kp C   &kp V    &none       &none  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp RIGHT_ARROW  &kp K_APPLICATION
&kp LEFT_CONTROL  &none           &none   &kp LEFT_ALT  &none   &none    &none       &none                                                    &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        Automouse {
            bindings = <
&none  &none  &none  &none  &none                  &none     &none     &none     &none  &none
&none  &none  &none  &none  &none  &none    &none  &mkp MB3  &mkp MB1  &mkp MB2  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none     &none     &none     &none  &none
&none  &none  &none  &none  &none  &none    &none  &none                                &none
            >;

            sensor-bindings = <&scroll_up_down_invert>;
        };
    };
};
